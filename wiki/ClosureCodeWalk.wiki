#summary [Closure] Library code walk

= Introduction =

This code walk you will learn how to create simple page using Closure based ui library that looks as below.

http://lh4.ggpht.com/_dS5nq8R6miE/TUkhSTcFsGI/AAAAAAAAEIc/ihsiQSV7kYQ/tv.ui.Decoration%20codelab%20-%20Google%20Docs.jpg

First [https://code.google.com/p/gtv-ui-lib/downloads/detail?name=codewalk-start.zip download archive with simple HTML for this codelab] and take a look at it. All it does is:
  * bootstraps Closure Library along with tv.ui.Decoration code in HEAD element,
  * imports necessary components using goog.require(),
  * contains basic CSS styles that defines the page,
  * contains HTML only for part of above page, rest of it is commented as it will be explained later.


If you would have some problems, you can [https://code.google.com/p/gtv-ui-lib/downloads/detail?name=codewalk-final.zip download final result of the codelab].

= What we want to do? =

Now let’s take a closer look at page logic that we want to create.

http://lh3.ggpht.com/_dS5nq8R6miE/TUkhSddEcOI/AAAAAAAAEIY/nsdYDFBusIo/s800/tv.ui.Decorationcodelab.png

Toolkit does not construct any HTML on the fly. It’s designed to decorate existing HTML in order to make components out of it and add dynamics to it. Decoration is based on conventions by adding special CSS classes to HTML elements (all of those have “tv-” prefix). Let’s take a look at already downloaded example.

{{{
<!-- Top level container is declared as vertical container. Note that
     additional styles can be applied for customization. -->
<div class="tv-container-vertical main-container">
  <!-- Declares horizontal container that holds two buttons. -->
  <div class="tv-container-horizontal buttons-container">
    <!-- “alert button” and “go to google.com” -->
  </div>
  <!-- Declares vertical container that holds shelves. -->
  <div class="tv-container-vertical shelves">
    <!-- “shelves” with images -->
  </div>
</div>
}}}

== First horizontal container ==

Let’s take a look at first horizontal container that holds two buttons.

<div class="tv-container-horizontal buttons-container">
  <!-- Declares that following element will be button. Buttons have
       ACTION events that you can hook up. -->
  <div class="tv-button alert-button">Alert button</div>
  <!-- Declares a special case of button that is a Link. Note that it
       contains href attribute with link to http://google.com. Toolkit
       will recognize it and when using will click on it or press ENTER
       when it’s focused, it will redirect to google.com. -->
  <div class="tv-link goto-link" href="http://google.com">
     Go to google.com
  </div>
</div>

As you can see components are plain HTML using mainly DIV elements. You can use other elements but DIVs are in most cases the best choice.

{{{
<div class="tv-container-vertical shelves">
  <!-- First container, 5 items, no scrolling, no animation. -->
  <div class="tv-container-horizontal movie-cover-container
              movie-covers-1">
    <!-- Single movie cover is declared as Component. This is lowest -->
    <!--  lowest level in hierarchy component in tv.ui.Decoration. -->
    <div class="tv-component movie-cover">
      <img src="http://g2.gstatic.com/.../93951_aa.jpg">
    </div>
    <!-- [... 4 other tv-components omitted ...] -->
  </div>
</div>
}}}